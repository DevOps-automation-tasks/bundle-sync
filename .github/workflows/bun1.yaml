name: Sync ci

on:
  push:
    paths:
      - 'bundle/**'
    branches:
      - 'rhoai-*'
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to sync'
        required: false
        default: 'main'

jobs:
  sync-bundle:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Operator Repo
        uses: actions/checkout@v3
        with:
          repository: DevOps-automation-tasks/rhods-operator
          path: operator-repo
          fetch-depth: 0

      - name: Checkout RBC Repo
        uses: actions/checkout@v3
        with:
          repository: DevOps-automation-tasks/RHOAI-Build-Config
          path: rbc-repo
          fetch-depth: 0

      - name: Set up Git for RBC Repo
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      - name: Sync Bundle to RBC Repo
        run: |
          cd operator-repo
          
          # Extract branches matching the x.y pattern
          operator_branches=$(git branch -r | grep 'origin/rhoai-' | sed 's/origin\///')

          cd ../rbc-repo

          # Determine branches to sync
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            # Manual trigger: Sync specific branch
            branch="${{ github.event.inputs.branch }}"
            operator_branches="$branch"
          fi

          for branch in $operator_branches; do
            # Check if the branch exists in RBC repo
            if git show-ref --verify --quiet refs/heads/$branch; then
              echo "Syncing $branch"

              # Checkout the branch from RBC repo
              git checkout $branch

              # Checkout the branch from the operator repo
              cd ../operator-repo
              git checkout $branch

              # Remove unwanted fields from bundle files
              sed -i '/channels:/d' bundle/*.yaml
              sed -i '/defaultChannel:/d' bundle/*.yaml
              sed -i '/replaces:/d' bundle/*.yaml
              sed -i '/skipRanges:/d' bundle/*.yaml

              # Copy files from operator repo to RBC repo
              cp bundle/*.yaml ../rbc-repo/bundle/
              cp bundle/Dockerfile ../rbc-repo/bundle/Dockerfile

              # Commit and push changes to RBC repo
              cd ../rbc-repo
              git add bundle
              git commit -m "Sync bundle from operator repo for branch $branch"
              git push origin $branch
            else
              echo "Branch $branch does not exist in RBC repo. Skipping..."
            fi
          done
