name: bun12

on:
  push:
    paths:
      - 'bundle/**'
  workflow_dispatch:

jobs:
  sync-bundle:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3
        with:
          repository: DevOps-automation-tasks/RHOAI-Build-Config
          ref: main

      - name: Fetch branches from the Operator repo
        run: |
          # Fetch all branches and tags
          git fetch origin

          # List all remote branches matching the pattern and sort them
          branches=$(git branch -r | grep 'origin/rhoai-' | sed 's/origin\///' | sort -V)

          # Get the latest and second latest branches
          latest_branch=$(echo "$branches" | tail -n 1)
          previous_branch=$(echo "$branches" | tail -n 2 | head -n 1)

          # Set the branches as environment variables
          echo "LATEST_BRANCH=$latest_branch" >> $GITHUB_ENV
          echo "PREVIOUS_BRANCH=$previous_branch" >> $GITHUB_ENV

          echo "Latest branch: $LATEST_BRANCH"
          echo "Previous branch: $PREVIOUS_BRANCH"

      - name: Check branches and sync
        run: |
          # Function to sync branch
          sync_branch() {
            local branch=$1
            echo "Syncing for branch: $branch"
            
            # Fetch the latest changes from the branch
            git fetch origin $branch

            # Checkout the branch
            git checkout $branch

            # Your sync logic here
            # For example:
            # rsync -av --delete ./bundle/ path/to/sync/

            # Commit changes and push if necessary
            # git add .
            # git commit -m "Syncing branch $branch"
            # git push origin $branch
          }

          # Sync the latest and previous branches
          if [ -n "$LATEST_BRANCH" ]; then
            sync_branch "$LATEST_BRANCH"
          else
            echo "No latest branch found. Skipping sync for latest branch."
          fi

          if [ -n "$PREVIOUS_BRANCH" ]; then
            sync_branch "$PREVIOUS_BRANCH"
          else
            echo "No previous branch found. Skipping sync for previous branch."
          fi
