name: Sync Bundle

on:
  push:
    paths:
      - 'path/to/bundle/files/**'

jobs:
  sync-bundle:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout RHOAI-Build-Config repo
        uses: actions/checkout@v3
        with:
          repository: DevOps-automation-tasks/RHOAI-Build-Config
          path: rbc-repo

      - name: Checkout rhods-operator repo
        uses: actions/checkout@v3
        with:
          repository: DevOps-automation-tasks/rhods-operator
          path: operator-repo
          ref: main  # Ensure this is the correct branch for fetching bundle files

      - name: Get the latest branches
        id: get-branches
        run: |
          # Get the latest and second latest branches
          latest_branch=$(git -C operator-repo for-each-ref --sort=-committerdate --format '%(refname:short)' refs/heads/ | head -n 1)
          second_latest_branch=$(git -C operator-repo for-each-ref --sort=-committerdate --format '%(refname:short)' refs/heads/ | sed -n '2p')
          echo "LATEST_BRANCH=$latest_branch" >> $GITHUB_ENV
          echo "SECOND_LATEST_BRANCH=$second_latest_branch" >> $GITHUB_ENV

      - name: Sync bundle for latest branches
        run: |
          # Checkout the branches to sync
          git -C operator-repo checkout $LATEST_BRANCH
          # Perform the sync
          # (Replace with actual sync commands)
          rsync -av --delete operator-repo/path/to/bundle/files/ rbc-repo/bundle/
          # Commit and push changes
          git -C rbc-repo add bundle
          git -C rbc-repo commit -m "Sync bundle from $LATEST_BRANCH"
          git -C rbc-repo push

      - name: Sync bundle for second latest branches
        run: |
          # Checkout the branches to sync
          git -C operator-repo checkout $SECOND_LATEST_BRANCH
          # Perform the sync
          # (Replace with actual sync commands)
          rsync -av --delete operator-repo/path/to/bundle/files/ rbc-repo/bundle/
          # Commit and push changes
          git -C rbc-repo add bundle
          git -C rbc-repo commit -m "Sync bundle from $SECOND_LATEST_BRANCH"
          git -C rbc-repo push

      - name: Remove channels and metadata
        run: |
          # Perform the removal operations on the RBC repo
          # (Replace with actual commands)
          cd rbc-repo/bundle
          sed -i '/channels/d' bundle.yaml
          sed -i '/default-channel/d' bundle.yaml
          sed -i '/replaces/d' bundle.yaml
          sed -i '/skip-range/d' bundle.yaml
          # Commit and push changes
          git add bundle.yaml
          git commit -m "Remove channels, default channel, replaces, and skip ranges"
          git push
          
      - name: Overwrite Dockerfile in RBC repo
        run: |
          # Replace Dockerfile in RBC repo
          cp operator-repo/Dockerfile rbc-repo/bundle/Dockerfile
          # Commit and push changes
          git -C rbc-repo add bundle/Dockerfile
          git -C rbc-repo commit -m "Overwrite Dockerfile"
          git -C rbc-repo push
